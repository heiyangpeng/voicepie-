{"version":3,"file":"index.js","sources":["../../src/node/contentLoader.ts","../../node_modules/postcss-prefix-selector/index.js","../../src/node/postcss/isolateStyles.ts"],"sourcesContent":["import fs from 'fs-extra'\nimport path from 'path'\nimport glob from 'fast-glob'\nimport type { SiteConfig } from './config'\nimport matter from 'gray-matter'\nimport { normalizePath } from 'vite'\nimport {\n  createMarkdownRenderer,\n  type MarkdownRenderer\n} from './markdown/markdown'\n\nexport interface ContentOptions<T = ContentData[]> {\n  /**\n   * Include src?\n   * @default false\n   */\n  includeSrc?: boolean\n\n  /**\n   * Render src to HTML and include in data?\n   * @default false\n   */\n  render?: boolean\n\n  /**\n   * If `boolean`, whether to parse and include excerpt? (rendered as HTML)\n   *\n   * If `function`, control how the excerpt is extracted from the content.\n   *\n   * If `string`, define a custom separator to be used for extracting the\n   * excerpt. Default separator is `---` if `excerpt` is `true`.\n   *\n   * @see https://github.com/jonschlinkert/gray-matter#optionsexcerpt\n   * @see https://github.com/jonschlinkert/gray-matter#optionsexcerpt_separator\n   *\n   * @default false\n   */\n  excerpt?:\n    | boolean\n    | ((\n        file: {\n          data: { [key: string]: any }\n          content: string\n          excerpt?: string\n        },\n        options?: any\n      ) => void)\n    | string\n\n  /**\n   * Transform the data. Note the data will be inlined as JSON in the client\n   * bundle if imported from components or markdown files.\n   */\n  transform?: (data: ContentData[]) => T | Promise<T>\n\n  /**\n   * Options to pass to `fast-glob`.\n   * You'll need to manually specify `node_modules` and `dist` in\n   * `globOptions.ignore` if you've overridden it.\n   */\n  globOptions?: glob.Options\n}\n\nexport interface ContentData {\n  url: string\n  src: string | undefined\n  html: string | undefined\n  frontmatter: Record<string, any>\n  excerpt: string | undefined\n}\n\n/**\n * Create a loader object that can be directly used as the default export\n * of a data loader file.\n */\nexport function createContentLoader<T = ContentData[]>(\n  /**\n   * files to glob / watch - relative to srcDir\n   */\n  pattern: string | string[],\n  {\n    includeSrc,\n    render,\n    excerpt: renderExcerpt,\n    transform,\n    globOptions\n  }: ContentOptions<T> = {}\n): {\n  watch: string | string[]\n  load: () => Promise<T>\n} {\n  const config: SiteConfig = (global as any).VITEPRESS_CONFIG\n  if (!config) {\n    throw new Error(\n      'content loader invoked without an active vitepress process, ' +\n        'or before vitepress config is resolved.'\n    )\n  }\n\n  if (typeof pattern === 'string') pattern = [pattern]\n  pattern = pattern.map((p) => normalizePath(path.join(config.srcDir, p)))\n\n  let md: MarkdownRenderer\n\n  const cache = new Map<\n    string,\n    {\n      data: any\n      timestamp: number\n    }\n  >()\n\n  return {\n    watch: pattern,\n    async load(files?: string[]) {\n      if (!files) {\n        // the loader is being called directly, do a fresh glob\n        files = (\n          await glob(pattern, {\n            ignore: ['**/node_modules/**', '**/dist/**'],\n            ...globOptions\n          })\n        ).sort()\n      }\n\n      md =\n        md ||\n        (await createMarkdownRenderer(\n          config.srcDir,\n          config.markdown,\n          config.site.base,\n          config.logger\n        ))\n\n      const raw: ContentData[] = []\n\n      for (const file of files) {\n        if (!file.endsWith('.md')) {\n          continue\n        }\n        const timestamp = fs.statSync(file).mtimeMs\n        const cached = cache.get(file)\n        if (cached && timestamp === cached.timestamp) {\n          raw.push(cached.data)\n        } else {\n          const src = fs.readFileSync(file, 'utf-8')\n          const { data: frontmatter, excerpt } = matter(\n            src,\n            // @ts-expect-error gray-matter types are wrong\n            typeof renderExcerpt === 'string'\n              ? { excerpt_separator: renderExcerpt }\n              : { excerpt: renderExcerpt }\n          )\n          const url =\n            '/' +\n            normalizePath(path.relative(config.srcDir, file))\n              .replace(/(^|\\/)index\\.md$/, '$1')\n              .replace(/\\.md$/, config.cleanUrls ? '' : '.html')\n          const html = render ? md.render(src) : undefined\n          const renderedExcerpt = renderExcerpt\n            ? excerpt && md.render(excerpt)\n            : undefined\n          const data: ContentData = {\n            src: includeSrc ? src : undefined,\n            html,\n            frontmatter,\n            excerpt: renderedExcerpt,\n            url\n          }\n          cache.set(file, { data, timestamp })\n          raw.push(data)\n        }\n      }\n      return (transform ? transform(raw) : raw) as any\n    }\n  }\n}\n","module.exports = function postcssPrefixSelector(options) {\r\n  const prefix = options.prefix;\r\n  const prefixWithSpace = /\\s+$/.test(prefix) ? prefix : `${prefix} `;\r\n  const ignoreFiles = options.ignoreFiles ? [].concat(options.ignoreFiles) : [];\r\n  const includeFiles = options.includeFiles\r\n    ? [].concat(options.includeFiles)\r\n    : [];\r\n\r\n  return function (root) {\r\n    if (\r\n      ignoreFiles.length &&\r\n      root.source.input.file &&\r\n      isFileInArray(root.source.input.file, ignoreFiles)\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      includeFiles.length &&\r\n      root.source.input.file &&\r\n      !isFileInArray(root.source.input.file, includeFiles)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    root.walkRules((rule) => {\r\n      const keyframeRules = [\r\n        'keyframes',\r\n        '-webkit-keyframes',\r\n        '-moz-keyframes',\r\n        '-o-keyframes',\r\n        '-ms-keyframes',\r\n      ];\r\n\r\n      if (rule.parent && keyframeRules.includes(rule.parent.name)) {\r\n        return;\r\n      }\r\n\r\n      rule.selectors = rule.selectors.map((selector) => {\r\n        if (options.exclude && excludeSelector(selector, options.exclude)) {\r\n          return selector;\r\n        }\r\n\r\n        if (options.transform) {\r\n          return options.transform(\r\n            prefix,\r\n            selector,\r\n            prefixWithSpace + selector,\r\n            root.source.input.file,\r\n            rule\r\n          );\r\n        }\r\n\r\n        return prefixWithSpace + selector;\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nfunction isFileInArray(file, arr) {\r\n  return arr.some((ruleOrString) => {\r\n    if (ruleOrString instanceof RegExp) {\r\n      return ruleOrString.test(file);\r\n    }\r\n\r\n    return file.includes(ruleOrString);\r\n  });\r\n}\r\n\r\nfunction excludeSelector(selector, excludeArr) {\r\n  return excludeArr.some((excludeRule) => {\r\n    if (excludeRule instanceof RegExp) {\r\n      return excludeRule.test(selector);\r\n    }\r\n\r\n    return selector === excludeRule;\r\n  });\r\n}\r\n","import postcssPrefixSelector from 'postcss-prefix-selector'\n\nexport function postcssIsolateStyles(\n  options: Parameters<typeof postcssPrefixSelector>[0] = {}\n): ReturnType<typeof postcssPrefixSelector> {\n  return postcssPrefixSelector({\n    prefix: ':not(:where(.vp-raw, .vp-raw *))',\n    includeFiles: [/base\\.css/],\n    transform(prefix, _selector) {\n      const [selector, pseudo = ''] = _selector.split(/(:\\S*)$/)\n      return selector + prefix + pseudo\n    },\n    ...options\n  })\n}\n"],"names":["postcssPrefixSelector"],"mappings":"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","x_google_ignoreList":[1]}